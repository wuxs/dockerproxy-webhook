{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace "dockerproxy-webhook-cert"}}
{{- $existingWebHookConfig := lookup "admissionregistration.k8s.io/v1" "MutatingWebhookConfiguration" .Release.Namespace "dockerproxy-webhook"}}
{{- $ca := genCA "dockerproxy-webhook-ca" 3650 }}
{{- $cn := printf "dockerproxy-webhook" }}
{{- $altName1 := printf "dockerproxy-webhook.%s" .Release.Namespace }}
{{- $altName2 := printf "dockerproxy-webhook.%s.svc" .Release.Namespace }}
{{- $altName3 := printf "dockerproxy-webhook.%s.svc.cluster" .Release.Namespace }}
{{- $altName4 := printf "dockerproxy-webhook.%s.svc.cluster.local" .Release.Namespace }}
{{- $cert := genSignedCert $cn nil (list $altName1 $altName2 $altName3 $altName4) 3650 $ca }}
apiVersion: v1
kind: Secret
metadata:
  name: dockerproxy-webhook-cert
  labels:
    {{- include "dockerproxy-webhook.labels" . | nindent 4 }}
data:
  {{ if $existingSecret }}tls.crt: {{ index $existingSecret.data "tls.crt" }}
  {{ else }}tls.crt: {{ b64enc $cert.Cert }}
  {{ end }}

  {{ if $existingSecret }}tls.key: {{ index $existingSecret.data "tls.key" }}
  {{ else }}tls.key: {{ b64enc $cert.Key }}
  {{ end }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "dockerproxy-webhook.fullname" . }}
  labels:
    app: {{ include "dockerproxy-webhook.fullname" . }}
webhooks:
- name: mutating.dockerproxy.kubesphere.io
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "dockerproxy-webhook.fullname" . }}
      path: "/mutate"
    caBundle: {{ if $existingWebHookConfig }}{{ (index $existingWebHookConfig.webhooks 0).clientConfig.caBundle }}{{ else }}{{ b64enc $ca.Cert }}{{ end }}
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    resources:
    - pods
    operations:
    - CREATE
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1", "v1beta1"]
